name: SNS

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  #checkov:skip=CKV_GHA_7: "The build output cannot be affected by user parameters other than the build entry point and the top-level source location. GitHub Actions workflow_dispatch inputs MUST be empty. "
    inputs:
      environment:
        description: "test selection"
        required: true
        type: choice
        default: "dev"
        options:
        - dev
        - test
        - prod


permissions: read-all

jobs:
  SNS-Deployment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Checkov GitHub Action
      uses: bridgecrewio/checkov-action@v12
      with:
        # This will add both a CLI output to the console and create a results.sarif file
        output_format: cli
        output_file_path: console

    - name: Set env var from input
      run: |
        echo "MY_ENV=${{ inputs.environment }}" >> $GITHUB_ENV
      if: github.event_name == 'workflow_dispatch'

    - name: Set env var from static string value
      run: |
        echo "MY_ENV=dev" >> $GITHUB_ENV
      if: github.event_name == 'push'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.2
      with:
        aws-region: ${{ vars.AWS_DEFAULT_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: v0.52.0

    - name: Show version
      run: tflint --version

    - name: Init TFLint
      run: tflint --init

    - name: Run TFLint
      run: tflint -f compact

    - name: Setup Tofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: "1.7.3"
        tofu_wrapper: false

    - name: Tofu Init
      run: tofu init

    - name: Tofu Fmt
      run: tofu fmt --recursive

    - name: Tofu Validate
      run: tofu validate

    - name: Todu Plan
      run: tofu plan

    - name: Tofu Apply
      run: tofu apply -auto-approve -var-file="environments/${{ env.MY_ENV }}.tfvars"
